#include"dllmain.h"

int 未央计次 = 0;


void 城镇数据处理()
{
	if (读配置(L"刷图模式", L"剧情升级") != 1 && 读配置(L"刷图模式", L"未央爬楼") == 1 && 读配置(L"刷图模式", L"活动升级") != 1)
	{
		未央计次++;
		if (未央计次 >= 3)
		{
			未央计次 = 0;
			未央城镇处理();
		}

	}
	if (读配置(L"刷图模式", L"剧情升级") == 1 && 读配置(L"刷图模式", L"未央爬楼") != 1 && 读配置(L"刷图模式", L"活动升级") != 1)
	{
		剧情城镇处理();
	}
	if (读配置(L"刷图模式", L"剧情升级") != 1 && 读配置(L"刷图模式", L"未央爬楼") != 1 && 读配置(L"刷图模式", L"活动升级") == 1)
	{
		活动城镇处理();
	}
}

void 未央城镇处理()
{
	if (读整数型(基址::城镇大区域) != 126)
	{
		return;
	}
	if (读整数型(基址::城镇小区域) != 2)
	{
		城镇移动Call(126, 2, 26, 335);
	}
	if (读配置(L"门票设置", L"拍卖售票") == 1)
	{
		if (交易上架() == true)
		{
			整理司南背包();
		}
		else
		{
			门票位置 = 思南背包遍历(读配置(L"门票设置", L"司南开始"));
			添加司南(门票位置);
		}
	}
	else
	{
		门票位置 = 思南背包遍历(读配置(L"门票设置", L"司南开始"));
		添加司南(门票位置);
	}
}

void 剧情城镇处理()
{
	if (是否有主线任务())
	{
		if (返回隐藏() > 0)
		{
			获取处理结果(返回隐藏());
		}
		if (返回主线() > 0)
		{
			获取处理结果(返回主线());
		}
	}
}

void 活动城镇处理()
{
	if (取角色等级() == 110)
	{
		公告(L"当前等级为110级，已到达满级");
		自动线程();
	}
	Pack.地图编号 = 获取地图编号(取角色等级());
	if (Pack.地图编号 == 9505 || Pack.地图编号 == 9506 || Pack.地图编号 == 9592 || Pack.地图编号 == 9593 || Pack.地图编号 == 9557 || Pack.地图编号 == 9558)
	{
		运算次数++;
	}
	if (Pack.地图编号 != 0)
	{
		公告(L"当前地图编号：" + to_wstring(Pack.地图编号));
		MapInfo 地图区域 = 获取地图信息(Pack.地图编号);
		int 自身大区域 = 读整数型(基址::城镇大区域);
		int 自身小区域 = 读整数型(基址::城镇小区域);
		if (自身大区域 != 地图区域.大 || 自身小区域 != 地图区域.小)
		{
			公告(L"当前位置与地图位置不匹配，正在移动");
			城镇移动Call(地图区域.大, 地图区域.小, 地图区域.X, 地图区域.Y);
		}
		else
		{
			if (读配置(L"操作模式", L"发包操作") == 1 && 读配置(L"操作模式", L"模拟操作") != 1)
			{
				组包选图();
			}
			if (读配置(L"操作模式", L"发包操作") != 1 && 读配置(L"操作模式", L"模拟操作") == 1)
			{
				if (取角色等级() == 78)
				{
					组包选图();
				}
				else
				{
					选图Call();
				}
			}
		}
	}
}

void 整理司南背包()
{
	ULONG64 背包地址 = 读长整数(读长整数(基址::司南背包) + 基址::物品栏偏移);
	for (int i = 0; i < 101; i++)
	{
		ULONG64 物品地址 = 读长整数(读长整数(背包地址 + static_cast<__int64>(i) * 8) - 72 + 16);
		if (物品地址 != 0)
		{
			wstring 物品名称 = 读文本(读长整数(物品地址 + 基址::物品名称偏移), 50);
			int 交易类型 = 读整数型(物品地址 + 基址::物品交易类型);
			int 司南类型 = 读整数型(读长整数(物品地址 + 基址::司南类型_1) + 基址::司南类型_2);
			if (交易类型 == 0)
			{
				if (司南类型 == 0)
				{
					int 售卖价格 = 读配置(L"单人价格", to_wstring(提取数字并转换(物品名称)) + L"阶");
					拍卖添加CALL(i, 48);
					Sleep(100);
					拍卖上架CALL(售卖价格);
				}
				if (司南类型 == 2)
				{
					int 售卖价格 = 读配置(L"组队价格", to_wstring(提取数字并转换(物品名称)) + L"阶");
					拍卖添加CALL(i, 48);
					Sleep(100);
					拍卖上架CALL(售卖价格);
				}
			}
		}
	}
	if (读配置(L"装备处理", L"分解装备") == 1 && 读配置(L"装备处理", L"出售装备") != 1)
	{
		分解装备();
	}
	if (读配置(L"装备处理", L"分解装备") != 1 && 读配置(L"装备处理", L"出售装备") == 1)
	{
		出售装备();
	}
	else
	{
		门票位置 = 思南背包遍历(读配置(L"门票设置", L"司南开始"));
		添加司南(门票位置);
	}

}

void 分解装备()
{
	DWORD64 背包地址 = 读长整数(读长整数(基址::背包基址) + 基址::物品栏偏移) + 72;
	for (int i = 0; i < 56; i++)
	{
		ULONG64 物品地址 = 读长整数(读长整数(背包地址 + static_cast<__int64>(i) * 8) - 72 + 16);
		if (物品地址 > 0)
		{
			wstring 物品名称 = (wchar_t*)*(INT64*)(物品地址 + 基址::物品名称偏移);
			int 物品属性 = 读整数型(物品地址 + 基址::装备品级);
			if (物品属性 == 0 || 物品属性 == 1 || 物品属性 == 2)
			{
				添加Call(读长整数(基址::背包基址), i);
				分解Call(基址::背包基址);
			}
		}
	}
	门票位置 = 思南背包遍历(读配置(L"门票设置", L"司南开始"));
	添加司南(门票位置);
}

void 出售装备()
{

}
